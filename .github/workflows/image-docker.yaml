name: image docker

on:
  workflow_call:
    inputs:
      language:
        required: true
        type: string
      pr_number:
        required: false
        type: string
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

env:
  PR_NUMBER: ${{ inputs.pr_number }}
  LANGUAGE: ${{ inputs.language }}

jobs:
  create:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      #—— Composer 🧙‍️ —————————————————————————————————————————————————————————

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: make install

      # —— Symfony 🎵 ——————————————————————————————————————————————————————————

      - name: Check Symfony requirements
        run: vendor/bin/requirements-checker

      - name: Generate docker template
        run: bin/console app:docker:generate $LANGUAGE

      - name: Generate matrix json file
        run: bin/console app:gha:matrix $LANGUAGE

      - uses: actions/upload-artifact@master
        with:
          name: templates
          path: .render/

      - id: set-matrix
        run: |
            matrix=$((cat .render/matrix.json) | jq -c .)
            echo "::set-output name=matrix::$matrix"

  docker:
    needs: create
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.create.outputs.matrix)}}
    steps:
      - uses: hmarr/debug-action@v2
      - name: Create annotation for build error
        run: echo "${{ matrix }}"
      - name: checkout repo
        uses: actions/checkout@v3
      - uses: actions/download-artifact@master
        with:
          name: templates
          path: .render/

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ matrix.image }}
          flavor: |
            latest=auto
            prefix=${{ matrix.prefix }},onlatest=true
            suffix=

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
